on:
  schedule:
    - cron: '07 12 5,20 * *'
  workflow_dispatch:

name: Cron continuous integration

env:
  CARGO_INCREMENTAL: 0

jobs:
  ci-linux:
    # Avoid running on people's forks, especially the scheduled runs.
    if: github.repository == 'evcxr/evcxr'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@${{ matrix.rust }}
        with:
          components: rustfmt, clippy, rust-src

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ steps.rust-toolchain.outputs.cachekey }}-${{ hashFiles('**/Cargo.lock') }}

      - run: cargo build
      - run: cargo test
      - run: cargo fmt --all -- --check
      - run: cargo clippy -- -D warnings


  ci-windows:
    # Avoid running on people's forks, especially the scheduled runs.
    if: github.repository == 'evcxr/evcxr'
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ steps.rust-toolchain.outputs.cachekey }}-${{ hashFiles('**/Cargo.lock') }}

      - run: cargo build
      - run: cargo test


  ci-mac:
    # Avoid running on people's forks, especially the scheduled runs.
    if: github.repository == 'evcxr/evcxr'
    runs-on: macos-latest
    strategy:
      matrix:
        rust:
          - stable

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ steps.rust-toolchain.outputs.cachekey }}-${{ hashFiles('**/Cargo.lock') }}

      - run: cargo build
      - run: cargo test
