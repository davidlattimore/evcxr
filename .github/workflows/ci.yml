on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

name: Continuous integration

env:
  CARGO_INCREMENTAL: 0

jobs:
  ci-windows:
    # Avoid running on people's forks, especially the scheduled runs.
    if: github.repository == 'evcxr/evcxr'
    runs-on: windows-2022

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ steps.rust-toolchain.outputs.cachekey }}-${{ hashFiles('**/Cargo.lock') }}

      - run: cargo build
      - run: cargo test

  release:
    name: Release
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write # Needed for creating releases

    strategy:
      matrix:
        include:
        - build: windows
          os: windows-2022
          target: x86_64-pc-windows-msvc

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - uses: dtolnay/rust-toolchain@stable

    - name: Extract release notes
      shell: bash
      run: |
        awk "/# Version ${GITHUB_REF_NAME#v}/{flag=1; next} /^$/{flag=0} flag" RELEASE_NOTES.md >REL.md

    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Create tarballs (Unix)
      if: matrix.build == 'linux' || matrix.build == 'macos'
      run: |
        n="evcxr-${{ github.ref_name }}-${{ matrix.target }}"
        mkdir "$n"
        cp "target/${{ matrix.target }}/release/evcxr" "$n"
        strip "$n/evcxr"
        tar zcf $n.tar.gz $n
        n="evcxr_jupyter-${{ github.ref_name }}-${{ matrix.target }}"
        mkdir "$n"
        cp "target/${{ matrix.target }}/release/evcxr_jupyter" "$n"
        strip "$n/evcxr_jupyter"
        tar zcf $n.tar.gz $n

    - name: Zip binaries (Window)
      if: matrix.build == 'windows'
      shell: bash
      run: |
        n="evcxr-${{ github.ref_name }}-${{ matrix.target }}"
        mkdir "$n"
        cp "target/${{ matrix.target }}/release/evcxr.exe" "$n"
        7z a $n.zip $n
        n="evcxr_jupyter-${{ github.ref_name }}-${{ matrix.target }}"
        mkdir "$n"
        cp "target/${{ matrix.target }}/release/evcxr_jupyter.exe" "$n"
        7z a $n.zip $n
